"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9094],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),s=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,h=m["".concat(o,".").concat(u)]||m[u]||c[u]||l;return n?r.createElement(h,p(p({ref:t},d),{},{components:n})):r.createElement(h,p({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,p=new Array(l);p[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var s=2;s<l;s++)p[s]=n[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6933:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={description:"Zephyr-on-RP2040-get-start",title:"Zephyr on RP2040 Getting started",tags:["embedded","rp2040","zephyr"],keywords:["embedded","rp2040","zephyr"],image:"https://github.com/tianrking.png",last_update:{date:"12/13/2022",author:"w0x7ce"}},p=void 0,i={unversionedId:"rp2040/Zephyr-on-RP2040-get-start",id:"rp2040/Zephyr-on-RP2040-get-start",title:"Zephyr on RP2040 Getting started",description:"Zephyr-on-RP2040-get-start",source:"@site/docs/rp2040/Zephyr-on-RP2040-get-start.md",sourceDirName:"rp2040",slug:"/rp2040/Zephyr-on-RP2040-get-start",permalink:"/zh-TW/rp2040/Zephyr-on-RP2040-get-start",draft:!1,editUrl:"https://github.com/tianrking/tianrking.github.io/edit/v3.0/docs/rp2040/Zephyr-on-RP2040-get-start.md",tags:[{label:"embedded",permalink:"/zh-TW/tags/embedded"},{label:"rp2040",permalink:"/zh-TW/tags/rp-2040"},{label:"zephyr",permalink:"/zh-TW/tags/zephyr"}],version:"current",lastUpdatedBy:"w0x7ce",lastUpdatedAt:1670889600,formattedLastUpdatedAt:"2022\u5e7412\u670813\u65e5",frontMatter:{description:"Zephyr-on-RP2040-get-start",title:"Zephyr on RP2040 Getting started",tags:["embedded","rp2040","zephyr"],keywords:["embedded","rp2040","zephyr"],image:"https://github.com/tianrking.png",last_update:{date:"12/13/2022",author:"w0x7ce"}},sidebar:"tutorialSidebar",previous:{title:"micro-ROS on RP2040 Getting started",permalink:"/zh-TW/rp2040/micro-ROS-on-RP2040"},next:{title:"Seeeduino_Lotus_Cortex-M0",permalink:"/zh-TW/samd/Seeeduino_Lotus_Cortex-M0"}},o={},s=[{value:"Get Zephyr and install Python dependencies",id:"get-zephyr-and-install-python-dependencies",level:2},{value:"Build the Blinky Sample",id:"build-the-blinky-sample",level:2},{value:"Read Code",id:"read-code",level:2},{value:"Xiao RP2040 Pinout Note",id:"xiao-rp2040-pinout-note",level:2}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"get-zephyr-and-install-python-dependencies"},"Get Zephyr and install Python dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://apt.kitware.com/kitware-archive.sh\nsudo bash kitware-archive.sh\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install --no-install-recommends git cmake ninja-build gperf \\\n  ccache dfu-util device-tree-compiler wget \\\n  python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \\\n  make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install python3-venv\n\npython3 -m venv ~/zephyrproject/.venv\n\nsource ~/zephyrproject/.venv/bin/activate\n\npip install west\n\nwest init ~/zephyrproject\n\ncd ~/zephyrproject\n\nwest update\n\nwest zephyr-export\n\npip install -r ~/zephyrproject/zephyr/scripts/requirements.txt\n")),(0,a.kt)("h1",{id:"install-zephyr-sdk"},"Install Zephyr SDK"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~\nwget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.2/zephyr-sdk-0.15.2_linux-x86_64.tar.gz\nwget -O - https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.2/sha256.sum | shasum --check --ignore-missing\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"tar xvf zephyr-sdk-0.15.2_linux-x86_64.tar.gz\ncd zephyr-sdk-0.15.2\n./setup.sh\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo cp ~/zephyr-sdk-0.15.2/sysroots/x86_64-pokysdk-linux/usr/share/openocd/contrib/60-openocd.rules /etc/udev/rules.d\nsudo udevadm control --reload\n")),(0,a.kt)("h2",{id:"build-the-blinky-sample"},"Build the Blinky Sample"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Build with west"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/zephyrproject/zephyr\nwest build -p always -b <your-board-name> samples/basic/blinky\n\n# For RP2040\nwest build -p always -b rpi_pico samples/basic/blinky\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Build with Cmake "),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd samples/hello_world\nmkdir build\ncd build\ncmake -DBOARD=rpi_pico ..\nmake -j\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"More"),(0,a.kt)("table",{parentName:"li"},(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null}))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"west flash"),(0,a.kt)("td",{parentName:"tr",align:null},"make flash")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"west debug"),(0,a.kt)("td",{parentName:"tr",align:null},"make debug")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"west debugserver"),(0,a.kt)("td",{parentName:"tr",align:null},"make debugserver")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"west build -t rom_report"),(0,a.kt)("td",{parentName:"tr",align:null},"make rom_report")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"west build -t ram_report"),(0,a.kt)("td",{parentName:"tr",align:null},"make ram_report")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"west boards"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"west diff"),(0,a.kt)("td",{parentName:"tr",align:null},"git diff")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"West status"),(0,a.kt)("td",{parentName:"tr",align:null},"git status"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"menuconfig"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"west build \u2013t menuconfig \u2013b rpi_pico samples\\hello_world\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Custom"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"west init -m https://github.com/zephyrproject-rtos/zephyr --mr v2.6.0\n")))),(0,a.kt)("h2",{id:"read-code"},"Read Code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"boards/<ARCH>/<BOARD>/<BOARD>_defconfig\n")),(0,a.kt)("p",null,"DTS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title='~/zephyrproject/zephyr/boards/arm/rpi_pico/rpi_pico.dts'",title:"'~/zephyrproject/zephyr/boards/arm/rpi_pico/rpi_pico.dts'"},'    // #define PICO_DEFAULT_LED_R_PIN 17 // Xiao RP2040\n    // #define PICO_DEFAULT_LED_G_PIN 16 // Xiao RP2040\n    // #define PICO_DEFAULT_LED_B_PIN 25 // Xiao RP2040\n    leds {\n        compatible = "gpio-leds";\n        led0: led_0 {\n            gpios = <&gpio0 25 GPIO_ACTIVE_HIGH>; //\n            label = "LED";\n        };\n    };\n\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:"title='~/zephyrproject/zephyr/samples/basic/blinky/src/main.c'",title:"'~/zephyrproject/zephyr/samples/basic/blinky/src/main.c'"},'/*\n * Copyright (c) 2016 Intel Corporation\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n#include <zephyr/kernel.h>\n#include <zephyr/drivers/gpio.h>\n\n/* 1000 msec = 1 sec */\n#define SLEEP_TIME_MS   1000\n\n/* The devicetree node identifier for the "led0" alias. */\n#define LED0_NODE DT_ALIAS(led0)\n\n/*\n * A build error on this line means your board is unsupported.\n * See the sample documentation for information on how to fix this.\n */\nstatic const struct gpio_dt_spec led = GPIO_DT_SPEC_GET(LED0_NODE, gpios);\n\n\n#define PICO_DEFAULT_LED_R_PIN 17 // Xiao RP2040\n#define PICO_DEFAULT_LED_G_PIN 16 // Xiao RP2040\n#define PICO_DEFAULT_LED_B_PIN 25 // Xiao RP2040\n\nvoid main(void)\n{\n    int ret;\n\n    if (!device_is_ready(led.port)) {\n        return;\n    }\n\n    ret = gpio_pin_configure_dt(&led, GPIO_OUTPUT_ACTIVE);\n    if (ret < 0) {\n        return;\n    }\n\n    while (1) {\n        ret = gpio_pin_toggle_dt(&led);\n        if (ret < 0) {\n            return;\n        }\n        k_msleep(SLEEP_TIME_MS);\n    }\n}\n\n')),(0,a.kt)("h2",{id:"xiao-rp2040-pinout-note"},"Xiao RP2040 Pinout Note"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"#define PICO_DEFAULT_LED_R_PIN 17 // Xiao RP2040\n#define PICO_DEFAULT_LED_G_PIN 16 // Xiao RP2040\n#define PICO_DEFAULT_LED_B_PIN 25 // Xiao RP2040\n")))}c.isMDXComponent=!0}}]);